#Configuration du serveur
server.port=8080

spring.jpa.database=POSTGRESQL

spring.datasource.platform=postgres

spring.datasource.url=jdbc:postgresql://postgres-db:5432/sica
spring.datasource.username=postgres-user
spring.datasource.password=L6Z2lBRvcK4TqOnL

spring.jpa.show-sql=true

spring.jpa.generate-ddl=true

spring.jpa.hibernate.ddl-auto = update

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

## Hibernate Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC


# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select username, password, published from Utilisateur where username=?
spring.queries.roles-query=select username, role from Utilisateur where username=?


## Gestion des fichiers
############################################
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

# ==============================================================
# = Spring boot send mail
# ==============================================================
spring.mail.host: smtp.gmail.com
spring.mail.port: 465
spring.mail.username=contact.sica.mail@gmail.com
spring.mail.password=k3GHLEHW
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.smtp.starttls.enable: true
spring.mail.properties.mail.smtp.starttls.required: true
spring.mail.properties.mail.smtp.ssl.enable: true

# confirmation de cr√©ation de compte
app.host=http://sica.masscorp-dev.win
app.mailhost=${app.host}/login/confirmation


## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/uploads
file.url=${app.host}/assets/uploads/